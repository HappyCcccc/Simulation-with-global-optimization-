sys_num = 30;
 

 
eps = 0.1;
gama = 0.9;
 

R = 10;
 

original_fun = ones(1, sys_num);
original_mu = zeros(1, sys_num);
original_sigma = zeros(sys_num, sys_num);
 

 

noise = 0;
noise_mu = 0;
noise_sigma = 1;
 

 

current_fun = ones(1, sys_num);
current_mu = ones(1, sys_num);
current_sigma = zeros(sys_num, sys_num);
 

 

total_iteration = ones(1, sys_num);
total_noise = zeros(1, sys_num);
 

interation_count = zeros(1, R);
lte = 0;
gtg = 0;
sum_mu = 0;
avg_mu = 0;
h = 0;
sum_h = 0;
avg_h = 0;
min_fun = 0;
 

E = zeros(sys_num, sys_num);
  

ro = ones(1, sys_num);
 

 

m = zeros(1, sys_num);
 

G = 1;
M = 1;
 
sum_interation = 0;
for i = 1 : R
    %initialize
    for j = 1 : sys_num
        for k = 1 : sys_num
            original_sigma(j,k) = exp(-(j-k)^2/sys_num);
        end
    end
    original_fun(1,:)=mvnrnd(original_mu, original_sigma);
    G = 1;
    ro = ones(1, sys_num);
    total_iteration = ones(1, sys_num);
    total_noise = zeros(1, sys_num);
    

    %caculate h
    min_fun = original_fun(1);
    h = 0;
    for j = 1 : sys_num
        if original_fun(j) < min_fun
            min_fun = original_fun(j);
        end
    end
    for j = 1 : sys_num
        h = h+1/(original_fun(j)-min_fun+eps)^2;
    end
    sum_h = sum_h+h;
    
end
H=sum_h/R